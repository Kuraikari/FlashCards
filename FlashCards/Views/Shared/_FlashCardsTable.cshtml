@using FlashCards.Models.FlashCards;
@model FlashCardsViewModel<FlashCardModel>

<table class="table">
    <thead>
        <tr role="row" scope="col">
            <th role="columnheader">
                @Html.DisplayNameFor(model => model.Data.First().Id)
            </th>
            <th role="columnheader">
                @Html.DisplayNameFor(model => model.Data.First().Topics)
            </th>
            <th role="columnheader">
                @Html.DisplayNameFor(model => model.Data.First().SubTopics)
            </th>
            <th role="columnheader">
                @Html.DisplayNameFor(model => model.Data.First().Front)
            </th>
            <th role="columnheader">
                @Html.DisplayNameFor(model => model.Data.First().Back)
            </th>
            <th role="columnheader"></th>
        </tr>
    </thead>
    <tbody>
        @if (Model.Data.Count() > 0)
        {
            foreach (var card in Model.Data)
            {
                <tr role="row" scope="row">
                    <th role="rowheader">
                        @Html.DisplayFor(modelItem => card.Id)
                    </th>
                    <td scope="col">
                        @Html.DisplayFor(modelItem => card.Topics)
                    </td>
                    <td scope="col">
                        @Html.DisplayFor(modelItem => card.SubTopics)
                    </td>
                    <td scope="col">
                        @for(int i = 0; i < card.Front.Content.Count(); i++)
                        {
                            <span>@(card.Front.Content[i])</span>
                        }
                    </td>
                    <td scope="col">
                        @for (int i = 0; i < card.Back.Content.Count(); i++)
                        {
                            <span>@(card.Back.Content[i])</span>
                        }
                    </td>
                    <td scope="col">
                        <a asp-action="Edit" asp-route-id="@card.Id">Edit</a>
                    </td>
                </tr>
            }
        }
    </tbody>
</table>
<div class="pagination">
    @if (Model.HasPreviousPage)
    {
        <div class="prev">
            <a asp-action="Index" asp-route-top="@Model.PageSize" asp-route-page="@(Model.PageNumber - 1)" asp-route-topic="@Model.Filter.FilterOptions[0]" asp-route-subtopic="@Model.Filter.FilterOptions[1]"><span class="pagination-prev"></span></a>
        </div>
    }

    @for (int i = 0; i < Model.TotalPages; i++)
    {
        <div class="pagination-page">
            <a asp-action="Index" asp-route-top="@Model.PageSize" asp-route-page="@(i + 1)" asp-route-topic="@Model.Filter.FilterOptions[0]" asp-route-subtopic="@Model.Filter.FilterOptions[1]"><span class="dot">@(i + 1)</span></a>
        </div>
    }

    @if (Model.HasNextPage)
    {
        <div class="next">
            <a asp-action="Index" asp-route-top="@Model.PageSize" asp-route-page="@(Model.PageNumber + 1)" asp-route-topic="@Model.Filter.FilterOptions[0]" asp-route-subtopic="@Model.Filter.FilterOptions[1]"><span class="pagination-next"></span></a>
        </div>
    }
</div>